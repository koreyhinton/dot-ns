#!/bin/bash

# code adapted from /usr/bin/which.debianutils

set -ef

ALLMATCHES=0
filters=""

# note: -ax not possible, must explicitly say -x or +x depending if you want
#       executable files or not.
#       -a means return all matching command paths not just the first path found
while true
do
    arg="$1"
    if [[ ( "$arg" =~ "--" && "${arg:2}" == "all" ) || ( "$arg" =~ "-" && "${arg:1}" == "a" ) ]]; then
        ALLMATCHES=1
        shift
    elif [[ "${arg:1}" == "x" && "${arg:0}" =~ [+|-] ]]; then
        filters="${filters}${arg}"
        shift
    else
        break
    fi
done

if [[ -z "$filters" ]]; then
    filters="+x-x"
fi

cond_echo()
{
    ns_filters="$1"
    ns_path="$2"
    if [[ "$ns_filters" =~ "+x" && -x "$ns_path" ]]; then
        echo "$ns_path"
    elif [[ "$ns_filters" =~ "-x" && ! -x "$ns_path" ]]; then
        echo "$ns_path"
    fi
}

if [ "$#" -eq 0 ]; then
 ALLRET=1
else
 ALLRET=0
fi
case $NS_PATH in
	(*[!:]:) NS_PATH="$NS_PATH:" ;;
esac
for PROGRAM in "$@"; do
 RET=1
 IFS_SAVE="$IFS"
 IFS=:
 case $PROGRAM in
  */*)
   if [ -f "$PROGRAM" ]; then
    cond_echo "$filters" "$PROGRAM"
    RET=0
   fi
   ;;
  *)
   for ELEMENT in $NS_PATH; do
    if [ -z "$ELEMENT" ]; then
     ELEMENT=.
    fi
    if [ -f "$ELEMENT/$PROGRAM" ]; then
     cond_echo "$filters" "$ELEMENT/$PROGRAM"
     RET=0
     [ "$ALLMATCHES" -eq 1 ] || break
    fi
   done
   ;;
 esac
 IFS="$IFS_SAVE"
 if [ "$RET" -ne 0 ]; then
  ALLRET=1
 fi
done

exit "$ALLRET"
